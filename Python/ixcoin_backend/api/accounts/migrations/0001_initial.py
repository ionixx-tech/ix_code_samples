# Generated by Django 2.0.3 on 2018-03-22 11:37

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_coin_balance', models.FloatField(blank=True, default=0.0, null=True)),
                ('total_ether_spent', models.FloatField(blank=True, default=0.0, null=True)),
                ('last_updated_time', models.DateTimeField(blank=True, null=True)),
                ('total_points', models.FloatField(blank=True, default=0.0, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                           to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'balance',
            },
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=150)),
                ('subject', models.CharField(max_length=300)),
                ('message', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'contact_us',
            },
        ),
        migrations.CreateModel(
            name='ForgotPasswordRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=100, validators=[
                    django.core.validators.RegexValidator('(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)',
                                                          message='Invalid data in the parameter.')])),
                ('token', models.CharField(blank=True, max_length=100, null=True)),
                ('request_time', models.DateTimeField(blank=True, null=True)),
                ('expiry_time', models.IntegerField(default=0, null=True)),
                ('is_expired', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                           to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'forgot_password_request',
            },
        ),
        migrations.CreateModel(
            name='MarketValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coin_name', models.CharField(default='IONIXX', max_length=100)),
                ('coin_symbol', models.CharField(default='IX', max_length=15)),
                ('market_cap', models.FloatField(null=True)),
                ('price', models.FloatField(null=True)),
                ('volume', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('last_updated_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'market_value',
            },
        ),
        migrations.CreateModel(
            name='TradeOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(null=True)),
                ('amount', models.FloatField(null=True)),
                ('total', models.FloatField(null=True)),
                ('trade_reference', models.IntegerField()),
                ('trade_method',
                 models.CharField(choices=[('LIMIT ORDER', 'LIMIT ORDER'), ('MARKET ORDER', 'MARKET ORDER')],
                                  max_length=100)),
                ('transaction_type', models.CharField(
                    choices=[('BUY', 'BUY'), ('SELL', 'SELL'), ('BIT_REQUEST', 'BIT_REQUEST'),
                             ('ASK_REQUEST', 'ASK_REQUEST'), ('CANCEL', 'CANCEL')], max_length=100)),
                ('status', models.CharField(
                    choices=[('WAITING FOR SELLER', 'WAITING FOR SELLER'), ('WAITING FOR BUYER', 'WAITING FOR BUYER'),
                             ('CANCELLED', 'CANCELLED'), ('STOCK PAID', 'STOCK PAID')], max_length=100)),
                ('last_updated_time', models.DateTimeField(auto_now_add=True)),
                ('buyer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                            related_name='buyer_trade_order_set', to=settings.AUTH_USER_MODEL)),
                ('seller', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE,
                                             related_name='seller_trade_order_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'trade_order',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('transaction_hash', models.CharField(default=0, max_length=150, unique=True)),
                ('transaction_type', models.CharField(
                    choices=[('crowdsale', 'crowdsale'), ('ixcoin', 'ixcoin'), ('trade', 'trade'),
                             ('transfer', 'transfer'), ('reward', 'reward')], default='ixcoin', max_length=100)),
                ('purchase_time', models.DateTimeField(blank=True, null=True)),
                ('ether_spent', models.FloatField(blank=True, default=0.0, null=True)),
                ('token_spent', models.FloatField(blank=True, default=0.0, null=True)),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE,
                                           to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'transaction',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_key', models.CharField(blank=True, max_length=100, null=True)),
                ('start_time', models.DateTimeField(default=None)),
                ('end_time', models.DateTimeField(default=None)),
                ('is_first_time', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_session',
            },
        ),
    ]
